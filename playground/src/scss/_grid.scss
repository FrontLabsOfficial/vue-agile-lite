/*============================
=            GRID            =
============================*/
@use "sass:math";

$gutters: (xs: $gutter-xs, sm: $gutter-sm, md: $gutter-md, lg: $gutter-lg, xl: $gutter-xl);
$contents: (xs: $content-xs, sm: $content-sm, md: $content-md, lg: $content-lg, xl: $content-xl);


// CONTAINER
.container {
	margin-left: auto;
	margin-right: auto;
	max-width: $content-xs;
	padding-left: $gutter-xs;
	padding-right: $gutter-xs;

	@each $breakpoint in $breakpoints {
		@include rwd(map-get($screens, #{$breakpoint})) {
			max-width: map-get($contents, #{$breakpoint});
			padding-left: map-get($gutters, #{$breakpoint});
			padding-right: map-get($gutters, #{$breakpoint});
		}
	}

	@include clearfix;
}


// CONTAINER FLUID
.container-fluid {
	margin-left: auto;
	margin-right: auto;
	padding-left: $gutter-xs;
	padding-right: $gutter-xs;

	@each $breakpoint in $breakpoints {
		@include rwd(map-get($screens, #{$breakpoint})) {
			padding-left: map-get($gutters, #{$breakpoint});
			padding-right: map-get($gutters, #{$breakpoint});
		}
	}

	@include clearfix;
}


// ROW
.row {
	display: flex;
	flex-wrap: wrap;
	margin-left: -#{$gutter-xs};
	margin-right: -#{$gutter-xs};

	@each $breakpoint in $breakpoints {
		@include rwd(map-get($screens, #{$breakpoint})) {
			margin-left: -#{map-get($gutters, #{$breakpoint})};
			margin-right: -#{map-get($gutters, #{$breakpoint})};
		}
	}

	//@include clearfix;
}

.no-gutters {
	margin-right: 0;
	margin-left: 0;
}

.no-gutters {
	> .col,
	> [class*="col-"] {
		padding-right: 0;
		padding-left: 0;
	}
}


// COLUMNS
@each $breakpoint in $breakpoints {
	.col-#{$breakpoint} {
		flex-basis: 0;
		flex-grow: 1;
		max-width: 100%;
	}

	.col-#{$breakpoint}-auto {
		flex: 0 0 auto;
		width: auto;
	}

	.pull-#{$breakpoint}-auto {
		right: auto;
	}

	.push-#{$breakpoint}-auto {
		left: auto
	}
}

@for $i from 1 through $columns {
	.col-xs-#{$i} {
		flex: 0 0 #{math.div(100%, $columns) * $i};
		max-width: #{math.div(100%, $columns) *$i};
	}

	.offset-xs-#{$i} {
		margin-left: math.div(100%, $columns) * $i;
	}

	.pull-xs-#{$i} {
		right: math.div(100%, $columns) * $i;
	}

	.pull-xs-#{$i} {
		left: math.div(100%, $columns) * $i;
	}
}

@for $i from 1 through $columns {
	.col-xs-#{$i} {
		width: 100%;
		min-height: 1px;
		padding-left: $gutter-xs;
		padding-right: $gutter-xs;
	}
}

@each $breakpoint in $breakpoints {
	@include rwd(map-get($screens, #{$breakpoint})) {
		@for $i from 1 through $columns {
			.col-#{$breakpoint}-#{$i} {
				padding-left: map-get($gutters, #{$breakpoint});
				padding-right: map-get($gutters, #{$breakpoint});
			}
		}
	}
}

@each $breakpoint in $breakpoints {
	@include rwd(map-get($screens, #{$breakpoint})) {
		@for $i from 1 through $columns {
			.col-#{$breakpoint}-#{$i} {
				flex: 0 0 math.div(100%, $columns) * $i;
				max-width: math.div(100%, $columns) * $i;
			}

			.offset-#{$breakpoint}-#{$i} {
				margin-left: math.div(100%, $columns) * $i;
			}

			.pull-#{$breakpoint}-#{$i} {
				right: math.div(100%, $columns) * $i;
			}
		}
	}
}
